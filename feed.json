{
    "version": "https://jsonfeed.org/version/1",
    "title": null,
    "subtitle": "不在能知，乃在能行",
    "icon": "http://example.com/images/favicon.ico",
    "description": "一只末影酱的小屋",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/%E6%9C%AB%E5%BD%B1%E7%9A%84%E6%AD%A6%E5%99%A8%E5%BA%93/",
            "url": "http://example.com/%E6%9C%AB%E5%BD%B1%E7%9A%84%E6%AD%A6%E5%99%A8%E5%BA%93/",
            "title": "后端武器库",
            "date_published": "2024-03-15T13:05:35.901Z",
            "content_html": "<p>额，what can I say, have funning!</p>\n<p>&lt;h1&gt;  武器库 &lt;/h1&gt;</p>\n<h2 id=\"处理器\"><a class=\"anchor\" href=\"#处理器\">#</a> 处理器</h2>\n<h4 id=\"1全局异常处理器\"><a class=\"anchor\" href=\"#1全局异常处理器\">#</a> 1. 全局异常处理器</h4>\n<p><img data-src=\"C:%5CUsers%5C%E6%9C%AB%E5%BD%B1%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240313232526145.png\" alt=\"image-20240313232526145\" /></p>\n<pre><code class=\"language-java\">@RestController\npublic class GlobalExceptionHandler&#123;\n    \n    @ExceptionHandler(Exception.class)\n       public Result exceptionHandler(BaseException ex)&#123;\n        log.error(&quot;异常信息：&#123;&#125;&quot;, ex.getMessage());\n        return Result.error(ex.getMessage());\n    &#125;\n&#125;\n</code></pre>\n<p><img data-src=\"C:%5CUsers%5C%E6%9C%AB%E5%BD%B1%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240313232545993.png\" alt=\"image-20240313232545993\" /></p>\n<h3 id=\"2-登录拦截器\"><a class=\"anchor\" href=\"#2-登录拦截器\">#</a> 2. 登录拦截器</h3>\n<pre><code class=\"language-java\">@Component\npublic class LoginInterceptor implements HandlerInterceptor &#123;\n  //  @Autowired\n   // private StringRedisTemplate stringRedisTemplate;\n    @Autowired\n    private RedisTemplate redisTemplate;\n    @Override\n    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler)&#123;\n      String token = request.getHeader(&quot;token&quot;);\n      try&#123;\n          //redis 获取相同token\n       // ValueOperations&lt;String,String&gt;operations=stringRedisTemplate.opsForValue();\n      //    String redisToken = operations.get(token);\n\n          Object o = redisTemplate.opsForValue().get(token);\n          if(o==null)&#123;\n              throw  new RuntimeException();\n          &#125;\n       //  / if(redisToken== null)&#123;\n          //    throw new RuntimeException();\n        //  &#125;\n          Map&lt;String,Object&gt;claims= JwtUtil.parseToken(token);\n          ThreadLocalUtil.set(claims);\n\n          //放行\n          return true;\n      &#125;catch(Exception e)&#123;\n          response.setStatus(401);\n          return false;\n      &#125;\n    &#125;\n    @Override\n    public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) throws Exception &#123;\n        //清空ThreadLocal中的数据\n        ThreadLocalUtil.remove();\n    &#125;\n\n&#125;\n</code></pre>\n<h2 id=\"工具类\"><a class=\"anchor\" href=\"#工具类\">#</a> 工具类</h2>\n<h4 id=\"threadlocal\"><a class=\"anchor\" href=\"#threadlocal\">#</a> ThreadLocal</h4>\n<p><img data-src=\"C:%5CUsers%5C%E6%9C%AB%E5%BD%B1%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240313232816691.png\" alt=\"image-20240313232816691\" /></p>\n<pre><code class=\"language-java\">public class BaseContext &#123;\n\n    public static ThreadLocal&lt;Long&gt; threadLocal = new ThreadLocal&lt;&gt;();\n\n    public static void setCurrentId(Long id) &#123;\n        threadLocal.set(id);\n    &#125;\n\n    public static Long getCurrentId() &#123;\n        return threadLocal.get();\n    &#125;\n\n    public static void removeCurrentId() &#123;\n        threadLocal.remove();\n    &#125;\n\n&#125;\n\n\n\n\n/////------------------------\n/**\n * ThreadLocal 工具类\n */\n@SuppressWarnings(&quot;all&quot;)\npublic class ThreadLocalUtil &#123;\n    //提供ThreadLocal对象,\n    private static final ThreadLocal THREAD_LOCAL = new ThreadLocal();\n\n    //根据键获取值\n    public static &lt;T&gt; T get()&#123;\n        return (T) THREAD_LOCAL.get();\n    &#125;\n\t\n    //存储键值对\n    public static void set(Object value)&#123;\n        THREAD_LOCAL.set(value);\n    &#125;\n\n\n    //清除ThreadLocal 防止内存泄漏\n    public static void remove()&#123;\n        THREAD_LOCAL.remove();\n    &#125;\n&#125;\n</code></pre>\n<h4 id=\"result统一返回处理\"><a class=\"anchor\" href=\"#result统一返回处理\">#</a> Result (统一返回处理)</h4>\n<pre><code class=\"language-java\">/**\n * 后端统一返回结果\n * @param &lt;T&gt;\n */\n@Data\npublic class Result&lt;T&gt; implements Serializable &#123;\n\n    private Integer code; //编码：1成功，0和其它数字为失败\n    private String msg; //错误信息\n    private T data; //数据\n\n    public static &lt;T&gt; Result&lt;T&gt; success() &#123;\n        Result&lt;T&gt; result = new Result&lt;T&gt;();\n        result.code = 1;\n        return result;\n    &#125;\n\n    public static &lt;T&gt; Result&lt;T&gt; success(T object) &#123;\n        Result&lt;T&gt; result = new Result&lt;T&gt;();\n        result.data = object;\n        result.code = 1;\n        return result;\n    &#125;\n\n    public static &lt;T&gt; Result&lt;T&gt; error(String msg) &#123;\n        Result result = new Result();\n        result.msg = msg;\n        result.code = 0;\n        return result;\n    &#125;\n\n&#125;\n</code></pre>\n<h4 id=\"jwt令牌\"><a class=\"anchor\" href=\"#jwt令牌\">#</a> JWT 令牌</h4>\n<pre><code class=\"language-java\">import com.auth0.jwt.JWT;\nimport com.auth0.jwt.algorithms.Algorithm;\n\nimport java.util.Date;\nimport java.util.Map;\n\npublic class JwtUtil &#123;\n\n    private static final String KEY = &quot;moying&quot;;\n\t\n\t//接收业务数据,生成token并返回\n    public static String genToken(Map&lt;String, Object&gt; claims) &#123;\n        return JWT.create()\n                .withClaim(&quot;claims&quot;, claims)\n                .withExpiresAt(new Date(System.currentTimeMillis() + 1000 * 60 * 60 ))\n                .sign(Algorithm.HMAC256(KEY));\n    &#125;\n\n\t//接收token,验证token,并返回业务数据\n    public static Map&lt;String, Object&gt; parseToken(String token) &#123;\n        return JWT.require(Algorithm.HMAC256(KEY))\n                .build()\n                .verify(token)\n                .getClaim(&quot;claims&quot;)\n                .asMap();\n    &#125;\n\n&#125;\n</code></pre>\n<h2 id=\"配置类\"><a class=\"anchor\" href=\"#配置类\">#</a> 配置类</h2>\n<h4 id=\"redis序列化处理\"><a class=\"anchor\" href=\"#redis序列化处理\">#</a> Redis (序列化处理)</h4>\n<pre><code class=\"language-java\">@Configuration\n@Slf4j\npublic class RedisConfiguration&#123;\n\n    @Bean\n    public RedisTemplate redisTemplate(RedisConnectionFactory redisConnectionFactory)&#123;\n        log.info(&quot;开始构建redis模板对象&quot;);\n        RedisTemplate redisTemplate=new RedisTemplate();\n        //设置redis的连接工厂对象\n        redisTemplate.setConnectionFactory(redisConnectionFactory);\n        //设置redis key的序列化器\n        redisTemplate.setKeySerializer(new StringRedisSerializer());\n        return redisTemplate;\n    &#125;\n&#125;\n</code></pre>\n<h4 id=\"拦截器配置\"><a class=\"anchor\" href=\"#拦截器配置\">#</a> 拦截器配置</h4>\n<pre><code class=\"language-java\">public class WebMvcConfiguration extends WebMvcConfigurationSupport &#123;\n    /**\n     * 注册自定义拦截器\n     *\n     * @param registry\n     */\n    protected void addInterceptors(InterceptorRegistry registry) &#123;\n        log.info(&quot;开始注册自定义拦截器...&quot;);\n        registry.addInterceptor(jwtTokenAdminInterceptor)\n                .addPathPatterns(&quot;/user/**&quot;)\n                .excludePathPatterns(&quot;/user/login&quot;,&quot;/user/register&quot;);\n    &#125;\n&#125;\n</code></pre>\n<h4 id=\"阿里oss配置\"><a class=\"anchor\" href=\"#阿里oss配置\">#</a> 阿里 oss 配置</h4>\n<pre><code class=\"language-java\">@Configuration\n@Slf4j\npublic class OssConfiguration &#123;\n\n    @Bean\n    public AliOssUtil aliOssUtil(AliOssProperties aliOssProperties)\n    &#123;\n        log.info(&quot;开始创建阿里云文件上传工具类对象: &#123;&#125;&quot;,aliOssProperties);\n        return new AliOssUtil(aliOssProperties.getEndpoint(),\n                aliOssProperties.getAccessKeyId(),\n                aliOssProperties.getAccessKeySecret(),\n                aliOssProperties.getBucketName());\n    &#125;\n\n&#125;\n</code></pre>\n",
            "tags": [
                "抓哇",
                "工具",
                "cv工程",
                "Java",
                "JavaWeb"
            ]
        },
        {
            "id": "http://example.com/hello-world/",
            "url": "http://example.com/hello-world/",
            "title": "Hello World",
            "date_published": "2024-03-15T10:47:51.197Z",
            "content_html": "<p>Welcome to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo</span>! This is your very first post. Check <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\">documentation</span> for more info. If you get any problems when using Hexo, you can find the answer in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=\">troubleshooting</span> or you can ask me on <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==\">GitHub</span>.</p>\n<h2 id=\"quick-start\"><a class=\"anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<pre><code class=\"language-bash\">$ hexo new &quot;My New Post&quot;\n</code></pre>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s\">Writing</span></p>\n<h3 id=\"run-server\"><a class=\"anchor\" href=\"#run-server\">#</a> Run server</h3>\n<pre><code class=\"language-bash\">$ hexo server\n</code></pre>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=\">Server</span></p>\n<h3 id=\"generate-static-files\"><a class=\"anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<pre><code class=\"language-bash\">$ hexo generate\n</code></pre>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s\">Generating</span></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<pre><code class=\"language-bash\">$ hexo deploy\n</code></pre>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s\">Deployment</span></p>\n",
            "tags": []
        }
    ]
}