<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title></title>
        <subtitle>不在能知，乃在能行</subtitle>
        <icon>http://example.com/images/favicon.ico</icon>
        <link>http://example.com</link>
        <author>
          <name>Dabing-He</name>
        </author>
        <description>一只末影酱的小屋</description>
        <language>zh-CN</language>
        <pubDate>Fri, 15 Mar 2024 21:05:35 +0800</pubDate>
        <lastBuildDate>Fri, 15 Mar 2024 21:05:35 +0800</lastBuildDate>
        <item>
            <guid isPermalink="true">http://example.com/%E6%9C%AB%E5%BD%B1%E7%9A%84%E6%AD%A6%E5%99%A8%E5%BA%93/</guid>
            <title>后端武器库</title>
            <link>http://example.com/%E6%9C%AB%E5%BD%B1%E7%9A%84%E6%AD%A6%E5%99%A8%E5%BA%93/</link>
            <category term="抓哇" scheme="http://example.com/categories/%E6%8A%93%E5%93%87/" />
            <category term="工具" scheme="http://example.com/categories/%E6%8A%93%E5%93%87/%E5%B7%A5%E5%85%B7/" />
            <category term="cv工程" scheme="http://example.com/categories/%E6%8A%93%E5%93%87/%E5%B7%A5%E5%85%B7/cv%E5%B7%A5%E7%A8%8B/" />
            <category term="Java" scheme="http://example.com/tags/Java/" />
            <category term="JavaWeb" scheme="http://example.com/tags/JavaWeb/" />
            <pubDate>Fri, 15 Mar 2024 21:05:35 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;额，what can I say, have funning!&lt;/p&gt;
&lt;p&gt;&amp;lt;h1&amp;gt;  武器库 &amp;lt;/h1&amp;gt;&lt;/p&gt;
&lt;h2 id=&#34;处理器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#处理器&#34;&gt;#&lt;/a&gt; 处理器&lt;/h2&gt;
&lt;h4 id=&#34;1全局异常处理器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1全局异常处理器&#34;&gt;#&lt;/a&gt; 1. 全局异常处理器&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5C%E6%9C%AB%E5%BD%B1%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240313232526145.png&#34; alt=&#34;image-20240313232526145&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;@RestController
public class GlobalExceptionHandler&amp;#123;
    
    @ExceptionHandler(Exception.class)
       public Result exceptionHandler(BaseException ex)&amp;#123;
        log.error(&amp;quot;异常信息：&amp;#123;&amp;#125;&amp;quot;, ex.getMessage());
        return Result.error(ex.getMessage());
    &amp;#125;
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5C%E6%9C%AB%E5%BD%B1%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240313232545993.png&#34; alt=&#34;image-20240313232545993&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-登录拦截器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-登录拦截器&#34;&gt;#&lt;/a&gt; 2. 登录拦截器&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;@Component
public class LoginInterceptor implements HandlerInterceptor &amp;#123;
  //  @Autowired
   // private StringRedisTemplate stringRedisTemplate;
    @Autowired
    private RedisTemplate redisTemplate;
    @Override
    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler)&amp;#123;
      String token = request.getHeader(&amp;quot;token&amp;quot;);
      try&amp;#123;
          //redis 获取相同token
       // ValueOperations&amp;lt;String,String&amp;gt;operations=stringRedisTemplate.opsForValue();
      //    String redisToken = operations.get(token);

          Object o = redisTemplate.opsForValue().get(token);
          if(o==null)&amp;#123;
              throw  new RuntimeException();
          &amp;#125;
       //  / if(redisToken== null)&amp;#123;
          //    throw new RuntimeException();
        //  &amp;#125;
          Map&amp;lt;String,Object&amp;gt;claims= JwtUtil.parseToken(token);
          ThreadLocalUtil.set(claims);

          //放行
          return true;
      &amp;#125;catch(Exception e)&amp;#123;
          response.setStatus(401);
          return false;
      &amp;#125;
    &amp;#125;
    @Override
    public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) throws Exception &amp;#123;
        //清空ThreadLocal中的数据
        ThreadLocalUtil.remove();
    &amp;#125;

&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;工具类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#工具类&#34;&gt;#&lt;/a&gt; 工具类&lt;/h2&gt;
&lt;h4 id=&#34;threadlocal&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#threadlocal&#34;&gt;#&lt;/a&gt; ThreadLocal&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5C%E6%9C%AB%E5%BD%B1%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240313232816691.png&#34; alt=&#34;image-20240313232816691&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class BaseContext &amp;#123;

    public static ThreadLocal&amp;lt;Long&amp;gt; threadLocal = new ThreadLocal&amp;lt;&amp;gt;();

    public static void setCurrentId(Long id) &amp;#123;
        threadLocal.set(id);
    &amp;#125;

    public static Long getCurrentId() &amp;#123;
        return threadLocal.get();
    &amp;#125;

    public static void removeCurrentId() &amp;#123;
        threadLocal.remove();
    &amp;#125;

&amp;#125;




/////------------------------
/**
 * ThreadLocal 工具类
 */
@SuppressWarnings(&amp;quot;all&amp;quot;)
public class ThreadLocalUtil &amp;#123;
    //提供ThreadLocal对象,
    private static final ThreadLocal THREAD_LOCAL = new ThreadLocal();

    //根据键获取值
    public static &amp;lt;T&amp;gt; T get()&amp;#123;
        return (T) THREAD_LOCAL.get();
    &amp;#125;
	
    //存储键值对
    public static void set(Object value)&amp;#123;
        THREAD_LOCAL.set(value);
    &amp;#125;


    //清除ThreadLocal 防止内存泄漏
    public static void remove()&amp;#123;
        THREAD_LOCAL.remove();
    &amp;#125;
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;result统一返回处理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#result统一返回处理&#34;&gt;#&lt;/a&gt; Result (统一返回处理)&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;/**
 * 后端统一返回结果
 * @param &amp;lt;T&amp;gt;
 */
@Data
public class Result&amp;lt;T&amp;gt; implements Serializable &amp;#123;

    private Integer code; //编码：1成功，0和其它数字为失败
    private String msg; //错误信息
    private T data; //数据

    public static &amp;lt;T&amp;gt; Result&amp;lt;T&amp;gt; success() &amp;#123;
        Result&amp;lt;T&amp;gt; result = new Result&amp;lt;T&amp;gt;();
        result.code = 1;
        return result;
    &amp;#125;

    public static &amp;lt;T&amp;gt; Result&amp;lt;T&amp;gt; success(T object) &amp;#123;
        Result&amp;lt;T&amp;gt; result = new Result&amp;lt;T&amp;gt;();
        result.data = object;
        result.code = 1;
        return result;
    &amp;#125;

    public static &amp;lt;T&amp;gt; Result&amp;lt;T&amp;gt; error(String msg) &amp;#123;
        Result result = new Result();
        result.msg = msg;
        result.code = 0;
        return result;
    &amp;#125;

&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;jwt令牌&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#jwt令牌&#34;&gt;#&lt;/a&gt; JWT 令牌&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import com.auth0.jwt.JWT;
import com.auth0.jwt.algorithms.Algorithm;

import java.util.Date;
import java.util.Map;

public class JwtUtil &amp;#123;

    private static final String KEY = &amp;quot;moying&amp;quot;;
	
	//接收业务数据,生成token并返回
    public static String genToken(Map&amp;lt;String, Object&amp;gt; claims) &amp;#123;
        return JWT.create()
                .withClaim(&amp;quot;claims&amp;quot;, claims)
                .withExpiresAt(new Date(System.currentTimeMillis() + 1000 * 60 * 60 ))
                .sign(Algorithm.HMAC256(KEY));
    &amp;#125;

	//接收token,验证token,并返回业务数据
    public static Map&amp;lt;String, Object&amp;gt; parseToken(String token) &amp;#123;
        return JWT.require(Algorithm.HMAC256(KEY))
                .build()
                .verify(token)
                .getClaim(&amp;quot;claims&amp;quot;)
                .asMap();
    &amp;#125;

&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;配置类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#配置类&#34;&gt;#&lt;/a&gt; 配置类&lt;/h2&gt;
&lt;h4 id=&#34;redis序列化处理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#redis序列化处理&#34;&gt;#&lt;/a&gt; Redis (序列化处理)&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;@Configuration
@Slf4j
public class RedisConfiguration&amp;#123;

    @Bean
    public RedisTemplate redisTemplate(RedisConnectionFactory redisConnectionFactory)&amp;#123;
        log.info(&amp;quot;开始构建redis模板对象&amp;quot;);
        RedisTemplate redisTemplate=new RedisTemplate();
        //设置redis的连接工厂对象
        redisTemplate.setConnectionFactory(redisConnectionFactory);
        //设置redis key的序列化器
        redisTemplate.setKeySerializer(new StringRedisSerializer());
        return redisTemplate;
    &amp;#125;
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;拦截器配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#拦截器配置&#34;&gt;#&lt;/a&gt; 拦截器配置&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class WebMvcConfiguration extends WebMvcConfigurationSupport &amp;#123;
    /**
     * 注册自定义拦截器
     *
     * @param registry
     */
    protected void addInterceptors(InterceptorRegistry registry) &amp;#123;
        log.info(&amp;quot;开始注册自定义拦截器...&amp;quot;);
        registry.addInterceptor(jwtTokenAdminInterceptor)
                .addPathPatterns(&amp;quot;/user/**&amp;quot;)
                .excludePathPatterns(&amp;quot;/user/login&amp;quot;,&amp;quot;/user/register&amp;quot;);
    &amp;#125;
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;阿里oss配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#阿里oss配置&#34;&gt;#&lt;/a&gt; 阿里 oss 配置&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;@Configuration
@Slf4j
public class OssConfiguration &amp;#123;

    @Bean
    public AliOssUtil aliOssUtil(AliOssProperties aliOssProperties)
    &amp;#123;
        log.info(&amp;quot;开始创建阿里云文件上传工具类对象: &amp;#123;&amp;#125;&amp;quot;,aliOssProperties);
        return new AliOssUtil(aliOssProperties.getEndpoint(),
                aliOssProperties.getAccessKeyId(),
                aliOssProperties.getAccessKeySecret(),
                aliOssProperties.getBucketName());
    &amp;#125;

&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/hello-world/</guid>
            <title>Hello World</title>
            <link>http://example.com/hello-world/</link>
            <pubDate>Fri, 15 Mar 2024 18:47:51 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;Welcome to &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvLw==&#34;&gt;Hexo&lt;/span&gt;! This is your very first post. Check &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv&#34;&gt;documentation&lt;/span&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=&#34;&gt;troubleshooting&lt;/span&gt; or you can ask me on &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==&#34;&gt;GitHub&lt;/span&gt;.&lt;/p&gt;
&lt;h2 id=&#34;quick-start&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#quick-start&#34;&gt;#&lt;/a&gt; Quick Start&lt;/h2&gt;
&lt;h3 id=&#34;create-a-new-post&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#create-a-new-post&#34;&gt;#&lt;/a&gt; Create a new post&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ hexo new &amp;quot;My New Post&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s&#34;&gt;Writing&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;run-server&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#run-server&#34;&gt;#&lt;/a&gt; Run server&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ hexo server
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=&#34;&gt;Server&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;generate-static-files&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#generate-static-files&#34;&gt;#&lt;/a&gt; Generate static files&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ hexo generate
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s&#34;&gt;Generating&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;deploy-to-remote-sites&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#deploy-to-remote-sites&#34;&gt;#&lt;/a&gt; Deploy to remote sites&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ hexo deploy
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s&#34;&gt;Deployment&lt;/span&gt;&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
